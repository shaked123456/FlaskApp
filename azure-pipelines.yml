trigger:
- main

variables:
- group: global parameters

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python $(pythonVersion)'
      inputs:
        versionSpec: '$(pythonVersion)'

    - script: 'pip install -r requirements.txt'
      displayName: 'Install Dependencies'

    - task: ArchiveFiles@2
      displayName: 'Archive '
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory) '

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        ArtifactName: flask

- stage: Deploy
  displayName: Deploy
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: Deploy
    pool:
      name: $(myAgentPool)
      demands:
      - agent.name -equals $(myAgent)
      
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: 'Download Pipeline Artifact'
      inputs:
        artifactName: flask
        targetPath: $(agentWorkDir)\deploy
 
    - task: ExtractFiles@1
      displayName: 'Extract files '
      inputs:
        destinationFolder: $(agentWorkDir)\deploy

    - script: 'start /min $(agentPython) app.py'
      displayName: 'Command Line Script'